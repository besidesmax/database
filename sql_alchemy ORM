

____ORDERING____
# Query all students ordered by age
# .desc changes the order of the list
# if your order by more then one (Student.date_of_birth.desc(),Student.student_id) then the order matters
students = session.query(Student).order_by(Student.date_of_birth.desc(),Student.student_id).all()

for student in students:
    print(f"Student_birthday: {student.date_of_birth}, Student_ID: {student.student_id}")


____FILTER____
# query all Students
students_all = session.query(Student).all()

# query all Students with date_of_brith between 1999 und 2000
students_filtered = (session.query(Student).filter(Student.date_of_birth > "1999-01-01",
                                                   Student.date_of_birth < "2000-01-01").all())
# be careful, don't use Table-name.column-name, use for-statement "student" .column-name
for student in students_filtered:
    print(f"Student_ID: {student.student_id}, Date_of_birth: {student.date_of_birth}")

____FILTER_BY____
#when you use the same class, for filter, you are querying with you can use .filter_by
# query all users with age equals 30

courses = session.query(Course).filter_by(study_program=10)

for course in courses:
    print(f' Name:{course.name}')

____WHERE____
students = session.query(Student).where(Student.date_of_birth > "1999-01-01",
                                        Student.date_of_birth < "1999-12-31").all()

for student in students:
    print(f'Student_first_name;{student.first_name}, Student_date_of_birth: {student.date_of_birth}')

____OR____
from sqlalchemy import or_
# get students that younger than 20 or have a student_id lower than 5
students = session.query(Student).where(or_(Student.date_of_birth > "2004-01-01", Student.student_id < 5)).all()

for student in students:
    print(f'Student_id: {student.student_id}, date_of_brith: {student.date_of_birth}')

print(len(students))



____option2 for OR_ (| instate of or_)____
# get students that younger than 20 or have a student_id lower than 5
students = session.query(Student).where((Student.date_of_birth > "2004-01-01") |(Student.student_id < 5)).all()

for student in students:
    print(f'Student_id: {student.student_id}, date_of_brith: {student.date_of_birth}')

print(len(students))



____AND____
from sqlalchemy import and_
# get students that younger than 30 and have a student_id lower than 50
students = session.query(Student).where(and_(Student.date_of_birth > "1994-01-01", Student.student_id < 50)).all()

for student in students:
    print(f'Student_id: {student.student_id}, date_of_brith: {student.date_of_birth}')

print(len(students))

____option2 for AND_ (& instate of and_)____

# get students that younger than 30 and have a student_id lower than 50
students = session.query(Student).where((Student.date_of_birth > "1994-01-01")&(Student.student_id < 50)).all()

for student in students:
    print(f'Student_id: {student.student_id}, date_of_brith: {student.date_of_birth}')

print(len(students))



____NOT_____
from sqlalchemy import not_

# get all Students without a student_id higher than 6

students = session.query(Student).where(not_(Student.student_id >= 6)).all()

for student in students:
    print(f'{student.student_id} , {student.first_name}')


____GROUP BY_____